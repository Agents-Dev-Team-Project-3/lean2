{"version":3,"sources":["apiConfig.js","components/Orders/CheckoutForm.jsx","components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","images/lean-2-logo-alt3.png","components/Header/Header.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Products/Products.js","api/orders.js","components/Products/Product.js","api/products.js","components/Orders/Order.js","components/Orders/CompletedOrders.js","App.js","index.js"],"names":["apiUrls","apiUrl","window","location","hostname","CheckoutForm","props","useState","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","refreshCart","user","order","useEffect","fetch","method","headers","body","JSON","stringify","items","id","then","res","json","data","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","button","background","borderRadius","border","padding","fontWeight","cursor","display","transition","boxShadow","width","handleChange","event","a","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","onSubmit","options","onChange","className","role","text","href","AuthenticatedRoute","Component","component","render","rest","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","deleteAlert","Alert","dismissible","onClose","Heading","React","authenticatedOptions","unauthenticatedOptions","Header","products","setCategory","menus","forEach","p","includes","category","push","categories","map","NavDropdown","Item","onClick","Navbar","bg","expand","Brand","textDecoration","float","marginTop","src","logo","marginLeft","Toggle","aria-controls","Collapse","Nav","email","exact","title","menuVariant","signIn","credentials","axios","url","password","SignUp","target","name","value","onSignUp","msgAlert","history","onSignInSuccess","setUser","password_confirmation","passwordConfirmation","catch","Form","Group","controlId","Label","Control","required","type","placeholder","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","clearOrder","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","cardImg","margin","height","cardCol","cardTitle","cardBody","backgroundColor","breadcrumbs","console","log","productList","filter","item","Col","xs","md","lg","xl","Card","_id","Img","image","Body","Title","Text","price","Row","Breadcrumb","showOrder","initiateOrder","updateOrder","contents","product","setProduct","setOrder","match","params","description","oldOrder","matched","orderObj","quantity","length","handleRemoveOne","targetId","err","handleAddOne","handleRemoveAll","formatter","Intl","NumberFormat","currency","minimumFractionDigits","total","cartContent","Math","round","num","format","completedOrders","setCompletedOrders","indexOrders","orders","completed","displayOrders","updatedAt","promise","loadStripe","appContainer","App","owner","coupon","completeOrder","msgAlerts","msg","uuid","Container","fluid","path","Product","WebFont","load","google","families","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cfd307ed.chunk.js","sourcesContent":["let apiUrl\nconst apiUrls = {\n  production: 'https://afternoon-springs-15413.herokuapp.com',\n  development: 'http://localhost:4741'\n  // development: 'https://afternoon-springs-15413.herokuapp.com'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { useState, useEffect } from 'react'\nimport apiUrl from './../../apiConfig'\n\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from '@stripe/react-stripe-js'\n\nexport default function CheckoutForm (props) {\n  const [succeeded, setSucceeded] = useState(false)\n  const [error, setError] = useState(null)\n  const [processing, setProcessing] = useState('')\n  const [disabled, setDisabled] = useState(true)\n  const [clientSecret, setClientSecret] = useState('')\n  const stripe = useStripe()\n  const elements = useElements()\n\n  const { refreshCart, user, order } = props\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(apiUrl + '/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ items: [{ id: 'xl-tshirt' }] })\n      })\n      .then(res => {\n        return res.json()\n      })\n      .then(data => {\n        setClientSecret(data.clientSecret)\n      })\n  }, [])\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: '#32325d',\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#32325d'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      },\n      button: {\n        background: '#5469d4',\n        fontFamily: 'Arial, sans-serif',\n        color: '#ffffff',\n        borderRadius: '0 0 4px 4px',\n        border: '0',\n        padding: '12px 16px',\n        fontSize: '16px',\n        fontWeight: '600',\n        cursor: 'pointer',\n        display: 'block',\n        transition: 'all 0.2s ease',\n        boxShadow: '0px 4px 5.5px 0px rgba(0, 0, 0, 0.07)',\n        width: '100%'\n      }\n    }\n  }\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty)\n    setError(event.error ? event.error.message : '')\n  }\n\n  const handleSubmit = async ev => {\n    ev.preventDefault()\n    setProcessing(true)\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    })\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`)\n      setProcessing(false)\n    } else {\n      setError(null)\n      setProcessing(false)\n      setSucceeded(true)\n      refreshCart(order, user)\n    }\n  }\n\n  return (\n    <div id='checkout'>\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\n        <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\n        <button\n          disabled={processing || disabled || succeeded}\n          id=\"submit\"\n          options={cardStyle}\n        >\n          <span id=\"button-text\">\n            {processing\n              ? (\n                <div className=\"spinner\" id=\"spinner\"></div>\n              )\n              : (\n                'Pay now'\n              )}\n          </span>\n        </button>\n        {/* Show any error that happens when processing the payment */}\n        {error && (\n          <div className=\"card-error\" role=\"alert\">\n            {error}\n          </div>\n        )}\n        {/* Show a success message upon completion */}\n        <p className={succeeded ? 'result-message' : 'result-message hidden'}>\n          Payment succeeded. Thank you for shopping with Lean2\n          <a text='Thank you for your purchase'\n            href={'https://dashboard.stripe.com/test/payments'}\n          >\n            {' '}\n          </a>\n        </p>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","export default __webpack_public_path__ + \"static/media/lean-2-logo-alt3.d1f634c1.png\";","import React, { Fragment } from 'react'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { Link, NavLink } from 'react-router-dom'\nimport logo from '../../images/lean-2-logo-alt3.png'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    <NavLink to='/cart' className='nav-link'>Cart</NavLink>\n    <NavLink to='/orders/order-history' className='nav-link'>My Orders</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user, products, setCategory }) => {\n  const menus = []\n  products.forEach((p) => {\n    if (!menus.includes(p.category)) {\n      menus.push(p.category)\n    }\n  })\n  const categories = menus.map((category) => (\n    <NavDropdown.Item key={category}>\n      {' '}\n      <NavLink\n        to={'/products/' + category}\n        className='nav-link text-dark'\n        onClick={() => setCategory(category)}>\n        {category}\n      </NavLink>\n    </NavDropdown.Item>\n  )\n  )\n\n  return (\n    <Navbar bg='dark' variant='dark' expand='md'>\n      <Navbar.Brand>\n        <Link\n          to='/'\n          style={{\n            color: '#FFF',\n            textDecoration: 'none',\n            float: 'left !important',\n            marginTop: '-15px !important'\n          }}>\n          <img\n            src={logo}\n            style={{ width: '250px', marginLeft: '25px', marginTop: '-7' }}\n          />\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ml-auto'>\n          {user && (\n            <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n          )}\n\n          <Fragment>\n            <NavLink exact to='/' className='nav-link'>\n              Home\n            </NavLink>\n            <NavDropdown\n              id='nav-dropdown-dark-example'\n              title='Products'\n              menuVariant='dark'\n            >\n              {categories}\n              {/* <NavDropdown.Item>\n                {' '}\n                <NavLink to='/products' className='nav-link text-dark'>\n                  All Products\n                </NavLink>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                {' '}\n                <NavLink to='/products/tents' className='nav-link text-dark'>\n                  Tents\n                </NavLink>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                {' '}\n                <NavLink to='/products/backpacks' className='nav-link text-dark'>\n                  Backpacks\n                </NavLink>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                {' '}\n                <NavLink to='/products/footwear' className='nav-link text-dark'>\n                  Footwear\n                </NavLink>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                <NavLink\n                  to='/products/camping-accessories'\n                  className='nav-link text-dark'>\n                  Camping Accessories\n                </NavLink>{' '}\n              </NavDropdown.Item> */}\n            </NavDropdown>\n          </Fragment>\n\n          {/* {alwaysOptions} */}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default Header\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n  const { msgAlert, history, onSignInSuccess, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => {\n      setUser(res.data.user)\n      return res\n    })\n    .then((res) => onSignInSuccess(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 className='text-light' >Sign Up</h3>\n        <Form className='bg-secondary text-light' onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const addedToCartSuccess = 'Successfully added item to cart.'\nexport const addedToCartFailure = 'Please sign in or sign up for an account.'\nexport const checkoutSuccess = 'Thank you for your business.'\nexport const checkoutFailure = 'Something went wrong.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n// import { initiateOrder } from '../../api/orders'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      order: {}\n    }\n  }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  onSignIn = (event) => {\n    event.preventDefault()\n\n    const { msgAlert, history, setUser, onSignInSuccess } = this.props\n\n    signIn(this.state)\n      .then((res) => {\n        setUser(res.data.user)\n        return (res)\n      })\n      .then((res) => onSignInSuccess(res.data.user))\n      .then(() =>\n        msgAlert({\n          heading: 'Sign In Success',\n          message: signInSuccess,\n          variant: 'success'\n        })\n      )\n      .then(() => history.push('/'))\n      .catch((error) => {\n        this.setState({ email: '', password: '' })\n        msgAlert({\n          heading: 'Sign In Failed with error: ' + error.message,\n          message: signInFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    const { email, password } = this.state\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3 className='text-light'>Sign In</h3>\n          <Form className='bg-secondary text-light' onSubmit={this.onSignIn}>\n            <Form.Group controlId='email'>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                type='email'\n                name='email'\n                value={email}\n                placeholder='Enter email'\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                name='password'\n                value={password}\n                type='password'\n                placeholder='Password'\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button variant='primary' type='submit'>\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, clearOrder, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n      .finally(() => clearOrder())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 className='text-light'>Change Password</h3>\n        <Form\n          className='bg-secondary text-light'\n          onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Card, Col, Row, Breadcrumb } from 'react-bootstrap'\n\nconst cardImg = {\n  margin: 'auto',\n  padding: '25px',\n  width: 'auto',\n  height: '200px'\n}\n\nconst cardCol = {\n  margin: 'auto',\n  marginTop: '10px'\n}\n\nconst cardTitle = {\n  height: '50px'\n}\n\nconst cardBody = {\n  backgroundColor: 'grey',\n  borderRadius: '0px 0px 8px 8px',\n  color: 'white'\n}\n\nconst card = {\n  border: 'none',\n  borderRadius: '10px'\n}\n\nconst breadcrumbs = {\n  fontSize: '12px',\n  textDecoration: 'none'\n}\n\nconst Products = (props) => {\n  // coming in from props, from clicking on the dropdown menu\n  const { category, products, setCategory } = props\n  console.log(category)\n\n  const filteredProducts = products.filter((item) => {\n    if (category === 'All Products') {\n      return item.category\n    } else {\n      return item.category === category\n    }\n  })\n\n  // console.log(products)\n\n  const productList = filteredProducts.map((item) => (\n    <Col xs={12} md={6} lg={4} xl={4} key={item._id} style={cardCol}>\n      <Card style={card} className='m-auto'>\n        <Link style={{ margin: 'auto' }} to={`/products/${item._id}`}>\n          <Card.Img variant='top' src={`${item.image}`} style={cardImg} />\n        </Link>\n        <Card.Body style={cardBody}>\n          <Card.Title style={cardTitle}>{item.name}</Card.Title>\n          <Card.Text>Price: ${item.price}</Card.Text>\n        </Card.Body>\n      </Card>\n    </Col>\n    // <div key={item._id} className='col-3 mt-5'>\n\n    // </div>\n  ))\n\n  return (\n    <Row>\n      <Breadcrumb className='mt-3' style={breadcrumbs}>\n        <Breadcrumb.Item>\n          <Link to={'/'}>\n            home\n          </Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>\n          <Link to={'/products'} onClick={() => setCategory('All Products')}>\n            products\n          </Link>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>{category}</Breadcrumb.Item>\n      </Breadcrumb>\n      <h3 className='text-light mt-5'>{category}</h3>\n      <Col xs={12} style={{ marginTop: '10px' }}>\n        <Row>{productList}</Row>\n      </Col>\n\n      <div className='col-12 mt-5'></div>\n    </Row>\n  )\n}\n\nexport default withRouter(Products)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// will only ever get users orders\nexport const indexOrders = (user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/orders',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const showOrder = (id, user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + `/orders/${id}`,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// checks to see if user has an open order before making one and will return that order(with contents) if found, (else it will return the new open order)\nexport const initiateOrder = (user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/orders/open',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// Does not check to see if use has an existing open order before making one, leading to the potential for multiple open orders in the database\nexport const createOrder = (user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/orders',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      order: {\n        contents: [],\n        owner: user,\n        coupon: '',\n        completed: false\n      }\n    }\n  })\n}\n\nexport const updateOrder = (id, data, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + `/orders/${id}`,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      order: {\n        contents: data\n      }\n    }\n  })\n}\n\nexport const completeOrder = (id, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + `/orders/${id}`,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      order: {\n        completed: true\n      }\n    }\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport { showProduct } from '../../api/products'\nimport { updateOrder, showOrder } from '../../api/orders'\nimport {\n  addedToCartFailure,\n  addedToCartSuccess\n} from '../AutoDismissAlert/messages'\n\nconst card = {\n  border: 'none',\n  borderRadius: '10px'\n}\n\nconst cardImg = {\n  margin: 'auto',\n  padding: '25px',\n  width: 'auto',\n  height: '200px'\n}\n\nconst cardTitle = {\n  height: '50px'\n}\n\nconst cardCol = {\n  margin: 'auto',\n  marginTop: '10px'\n}\n\nconst cardBody = {\n  backgroundColor: 'grey',\n  borderRadius: '0px 0px 8px 8px',\n  color: 'white'\n}\n\nconst button = {\n  width: 'inherit'\n}\n\nconst Products = (props) => {\n  const [product, setProduct] = useState(null)\n  const { order, user, setOrder, msgAlert } = props\n\n  useEffect(() => {\n    showProduct(props.match.params.id)\n      .then((res) => setProduct(res.data.product))\n      .catch(console.error)\n  }, [])\n\n  const handleAddToCart = () => {\n    const oldOrder = order.contents\n    let matched = false\n    const orderObj = {\n      id: product._id,\n      quantity: 1,\n      product: product\n    }\n    // if array is not empty,\n    // iterate and look for a matching id.  If found, increment quantity.\n    if (oldOrder.length === 0) {\n      oldOrder.push(orderObj)\n    } else {\n      // iterate each item, if id's match, increment quantity\n      oldOrder.forEach(item => {\n        if (item.id === product._id) {\n          // this will track if we've matched for below boolean\n          matched = true\n          item.quantity++\n        }\n      })\n      // after the forEach if there's no match go ahead and push the object,\n      // we need this tracker boolean, because we don't want to have the case of pushing\n      // multiple time inside the forEach loop.  This gives us a way to remember that there\n      // was no match.  It will false-out if it was turned true.\n      if (matched === false) {\n        oldOrder.push(orderObj)\n      }\n    }\n\n    const id = order._id\n    updateOrder(id, oldOrder, user)\n      .then(() => {\n        return showOrder(id, user)\n      })\n      .then((res) => setOrder(res.data.order))\n      .then(() =>\n        msgAlert({\n          heading: 'Added to Cart...',\n          message: addedToCartSuccess,\n          variant: 'success'\n        })\n      )\n      .catch(() => {\n        msgAlert({\n          heading: 'Could not add to Cart.',\n          message: addedToCartFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  if (!product) {\n    return <p>Loading...</p>\n  }\n\n  const { name, image, description, price } = product\n  // const secondary = 'Secondary'\n  return (\n    <Row>\n      <Col xs={10} md={8} style={cardCol}>\n        <Card\n          style={card}\n          className=\"m-auto\"\n        >\n          <Card.Img variant='top' src={`${image}`} style={cardImg}/>\n          <Card.Body style={cardBody}>\n            <Card.Title style={cardTitle}>{name}</Card.Title>\n            <Card.Text>{description}</Card.Text>\n            <Card.Text>${price}</Card.Text>\n            <Button style={button} onClick={handleAddToCart} variant='primary'>\n              Add to Cart\n            </Button>{' '}\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default withRouter(Products)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const index = () => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/products'\n  })\n}\n\nexport const showProduct = (id) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + `/products/${id}`\n  })\n}\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Button, Card } from 'react-bootstrap'\nimport { updateOrder, showOrder } from '../../api/orders'\n\n// import { index } from '../../api/products'\n\nconst button = {\n  width: 'inherit'\n}\n\nconst card = {\n  display: 'inline-block',\n  margin: 'auto',\n  width: '75%',\n  padding: '25px'\n}\n\nconst Cart = (props) => {\n  const { order, user, setOrder } = props\n\n  const handleRemoveOne = (event) => {\n    // event.preventDefault()\n    const targetId = event.target.value\n    // grad the order contents from state bind to oldOrder\n    let oldOrder = order.contents\n    // iterate over all order items, when we match our targetId (argument from function call),\n    // decrement by one, only if the quantity is 1 or more.  If not, do nothing, deal with\n    // this case in the next statement.\n    oldOrder.forEach(item => {\n      if (item.id === targetId && item.quantity > 0) {\n        item.quantity--\n      }\n    })\n    // this uses a negative condition for the boolean to delete a zero amount\n    oldOrder = oldOrder.filter(item => (item.quantity !== 0))\n    // now updates the order array at the API level.\n    const id = order._id\n    updateOrder(id, oldOrder, user)\n      .then(() => {\n        return showOrder(id, user)\n      })\n      .then((res) => setOrder(res.data.order))\n      .catch((err) => console.error(err))\n  }\n\n  const handleAddOne = (event) => {\n    // getting id from the value stored on the card in the DOM\n    const targetId = event.target.value\n    // variable to hold our state order object\n    const oldOrder = order.contents\n    // iterate through all our order and increment where the id's match\n    oldOrder.forEach((item) => {\n      if (item.id === targetId) {\n        item.quantity++\n      }\n    })\n    // API call to update the order\n    const id = order._id\n    updateOrder(id, oldOrder, user)\n      .then(() => {\n        return showOrder(id, user)\n      })\n      .then((res) => setOrder(res.data.order))\n      .catch((err) => console.error(err))\n  }\n\n  const handleRemoveAll = (event) => {\n    // pull ID from DOM element we clicked\n    const targetId = event.target.value\n    // hold our state object in a local variable\n    const oldOrder = order.contents\n    // iterate through and find the matching ID and set quantity to 0\n    oldOrder.forEach((item) => {\n      if (item.id === targetId) {\n        item.quantity = 0\n      }\n    })\n    // call handle removeOne to delete out of the cart.\n    handleRemoveOne(event)\n  }\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  })\n\n  let total = 0\n  const sumTotal = (num) => {\n    total += num\n  }\n\n  const cartContent = order.contents.map((item) => (\n    <div key={item.product._id} className='col-3 mt-5'>\n      <Card style={{ width: '25rem' }} className='m-auto'>\n        <Card.Img variant='top' src={`${item.product.image}`} style={card} />\n        <Card.Body>\n          <Card.Title>{item.product.name}</Card.Title>\n          <Card.Text>Price: ${item.product.price}</Card.Text>\n          <Card.Text>Quantity: {item.quantity}</Card.Text>\n          <Card.Text>\n            Subtotal: ${Math.round((item.quantity * item.product.price) * 100) / 100}\n          </Card.Text>\n          {sumTotal(item.quantity * item.product.price)}\n          <Button\n            style={button}\n            value={item.product._id}\n            onClick={handleRemoveOne}\n            variant='secondary'>\n            -\n          </Button>{' '}\n          <Button\n            style={button}\n            value={item.product._id}\n            onClick={handleAddOne}\n            variant='secondary'>\n            +\n          </Button>{' '}\n          <Button\n            style={button}\n            value={item.product._id}\n            onClick={handleRemoveAll}\n            variant='secondary'>\n            Remove All\n          </Button>{' '}\n        </Card.Body>\n      </Card>\n    </div>\n\n    // <ul key={item.product._id}>\n    //   <li>{item.product.name}</li>\n    //   <li>\n    //     <img src={`${item.product.image}`} width='200px'></img>\n    //   </li>\n    //   <li>Description: {item.product.description}</li>\n    //   <li>Quantity: {item.quantity}</li>\n    //   <li>Price: ${item.product.price}</li>\n    //   <li>Subtotal: ${item.quantity * item.product.price}</li>\n    //   {sumTotal((item.quantity * item.product.price))}\n    //   <Button style={button} value={item.product._id} onClick={handleRemove} variant='success'>-</Button>{' '}\n    //   <Button style={button} value={item.product._id} onClick={handleAddOne} variant='success'>+</Button>{' '}\n    //   <Button style={button} value={item.product._id} onClick={handleRemoveAll} variant='success'>Remove All</Button>{' '}\n    // </ul>\n  ))\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 style={{ color: 'white' }}>Order Total: {formatter.format(total)}</h3>\n        <Link to='/cart/checkout'>\n          <Button style={{ width: '100px', textDecoration: 'none' }} variant=\"warning\">Checkout</Button>\n        </Link>\n        <row>\n          {cartContent}\n        </row>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(Cart)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { indexOrders } from '../../api/orders'\n\nconst CompletedOrders = (props) => {\n  const [completedOrders, setCompletedOrders] = useState([])\n  const { user } = props\n\n  useEffect(() => {\n    indexOrders(user)\n      .then((res) => {\n        const orders = res.data.orders.filter((order) => order.completed)\n        return orders\n      })\n      .then((orders) => setCompletedOrders(orders))\n      .catch((err) => console.error(err))\n  }, [])\n\n  const displayOrders = completedOrders.map((order) => (\n    <>\n      <br></br>\n      <li key={order._id}>\n        <span>Purchase Date: {order.updatedAt}</span>\n        <br></br>\n        <span>Order #: {order._id}</span>\n      </li>\n    </>\n  ))\n\n  const list = {\n    color: 'white'\n  }\n  return (\n    <div className='row'>\n      <div style={list} className='col-sm-8 m-auto mt-5'>\n        <h4>Recent Purchases</h4>\n        <ul>{displayOrders}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(CompletedOrders)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport CheckoutForm from './components/Orders/CheckoutForm'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Products from './components/Products/Products'\nimport Product from './components/Products/Product'\nimport Cart from './components/Orders/Order'\nimport { initiateOrder, completeOrder } from './api/orders'\nimport { index } from './api/products'\nimport CompletedOrders from './components/Orders/CompletedOrders'\nimport { checkoutSuccess, checkoutFailure } from './components/AutoDismissAlert/messages'\n\nconst promise = loadStripe(\n  'pk_test_51JS9CaHSvQN3qMqE4F7Y9hKaSrmXTpNlwJH3z1fOItXYo4bkSKWYKTqqNYC2diaE6dgGDlbX12mDtLnzstNDHCAK00HL8Q8w2r'\n)\n\nconst appContainer = {\n  padding: '0px'\n}\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: '',\n      msgAlerts: [],\n      order: {\n        contents: [],\n        owner: this.user,\n        coupon: '',\n        completed: false\n      },\n      // state object to hold the category on the product page\n      products: [],\n      category: ''\n    }\n  }\n\n  componentDidMount () {\n    // api call for products\n    index()\n      .then((res) => this.setState({ products: res.data.products }))\n      .then((res) => console.log(res))\n      .catch(console.error)\n  }\n\n  setOrder = (order) => this.setState({ order })\n\n  setUser = (user) => this.setState({ user })\n\n  clearOrder = () => this.setState({\n    order: {\n      contents: [],\n      owner: this.user,\n      coupon: '',\n      completed: false\n    }\n  })\n\n  setCategory = (category) => this.setState({ category })\n\n  refreshCart = (order, user) => {\n    const id = order._id\n    completeOrder(id, user)\n      .then(() => initiateOrder(user))\n      .then((res) => {\n        this.setOrder(res.data.order)\n      })\n      .then((res) => {\n        this.msgAlert({\n          heading: 'Checkout successful.',\n          message: checkoutSuccess,\n          variant: 'success'\n        })\n      })\n      .catch((err) => {\n        this.msgAlert({\n          heading: 'Checkout failure.' + err,\n          message: checkoutFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  clearUser = () => this.setState({ user: '' })\n\n  onSignInSuccess = (user) => {\n    initiateOrder(user).then((res) => {\n      this.setOrder(res.data.order)\n    })\n  }\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  // need to populate dynamic routes for products, will map it into 'main' into a\n\n  render () {\n    const { msgAlerts, user, order, products, category } = this.state\n\n    return (\n      <Fragment>\n        <Container fluid style={appContainer}>\n          <Row className='justify-content-center'>\n            <Col xs={12} className='m-auto'>\n              <Header\n                user={user}\n                products={products}\n                setCategory={this.setCategory}\n              />\n              {msgAlerts.map((msgAlert) => (\n                <AutoDismissAlert\n                  key={msgAlert.id}\n                  heading={msgAlert.heading}\n                  variant={msgAlert.variant}\n                  message={msgAlert.message}\n                  id={msgAlert.id}\n                  deleteAlert={this.deleteAlert}\n                />\n              ))}\n            </Col>\n          </Row>\n          <main className='container'>\n            <Route />\n            <Route\n              path='/sign-up'\n              render={() => (\n                <SignUp\n                  msgAlert={this.msgAlert}\n                  setUser={this.setUser}\n                  onSignInSuccess={this.onSignInSuccess}\n                />\n              )}\n            />\n            <Route\n              path='/sign-in'\n              render={() => (\n                <SignIn\n                  msgAlert={this.msgAlert}\n                  setUser={this.setUser}\n                  setOrder={this.setOrder}\n                  onSignInSuccess={this.onSignInSuccess}\n                  order={order}\n                />\n              )}\n            />\n            <Route\n              exact path='/products'\n              // new prop to show only the clicked-on category\n              render={() => (\n                <Products\n                  msgAlert={this.msgAlert}\n                  products={products}\n                  category={category}\n                  setCategory={this.setCategory}\n                />\n              )}\n            />\n            <Route\n              path={'/products/' + category}\n              // new prop to show only the clicked-on category\n              render={() => (\n                <Products\n                  msgAlert={this.msgAlert}\n                  products={products}\n                  category={category}\n                  setCategory={this.setCategory}\n                />\n              )}\n            />\n            <Route\n              path='/products/:id'\n              render={() => (\n                <Product\n                  msgAlert={this.msgAlert}\n                  setOrder={this.setOrder}\n                  order={order}\n                  user={user}\n                />\n              )}\n            />\n            <AuthenticatedRoute\n              user={user}\n              path='/sign-out'\n              render={() => (\n                <SignOut\n                  msgAlert={this.msgAlert}\n                  clearUser={this.clearUser}\n                  clearOrder={this.clearOrder}\n                  user={user}\n                />\n              )}\n            />\n            <AuthenticatedRoute\n              user={user}\n              path='/change-password'\n              render={() => (\n                <ChangePassword msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n            <AuthenticatedRoute\n              user={user}\n              exact\n              path='/cart'\n              render={() => (\n                <Cart\n                  msgAlert={this.msgAlert}\n                  user={user}\n                  order={order}\n                  setOrder={this.setOrder}\n                />\n              )}\n            />\n            <AuthenticatedRoute\n              user={user}\n              path='/cart/checkout'\n              render={() => (\n                <div className='App'>\n                  <Elements stripe={promise}>\n                    <CheckoutForm\n                      refreshCart={this.refreshCart}\n                      user={user}\n                      order={order}\n                    />\n                  </Elements>\n                </div>\n              )}\n            />\n            <AuthenticatedRoute\n              user={user}\n              path='/orders/order-history'\n              render={() => (\n                <CompletedOrders msgAlert={this.msgAlert} user={user} />\n              )}\n            />\n          </main>\n        </Container>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport WebFont from 'webfontloader'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nWebFont.load({\n  google: {\n    families: ['Roboto', 'sans-serif']\n  }\n})\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}